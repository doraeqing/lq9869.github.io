<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿Q</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lq9869.github.io/"/>
  <updated>2017-05-24T10:19:34.000Z</updated>
  <id>https://lq9869.github.io/</id>
  
  <author>
    <name>阿Q</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Swift初见</title>
    <link href="https://lq9869.github.io/2017/05/24/Swift01/"/>
    <id>https://lq9869.github.io/2017/05/24/Swift01/</id>
    <published>2017-05-24T10:17:16.000Z</published>
    <updated>2017-05-24T10:19:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>通常说，编程语言教程中的第一个程序应该在屏幕上打印<code>“Hello, world”。</code>在Swift中，可以勇一行代码实现：<br><code>print(&quot;Hello, world!&quot;)</code><br><strong>1.  常量和变量</strong><br>常量的值一旦设定就不能改变，而变量的值可以随意更 改。<br> <strong>1. 1 声明常量和变量</strong><br> 用 let 来声明常量，用 var 来声明变量。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">let a = 10 //int类型的常量</div><div class="line">var b = 5  //int类型的变量</div><div class="line">let isFirst = true  //bool类型</div><div class="line">let isSecond = false </div><div class="line">var x = 0.0, y = 0.0, z = 0.0 //在一行中声明多个常量或者多个变量，用逗号隔开</div></pre></td></tr></table></figure></p>
<p>初始化常量或者变量的时候如果所赋的值类型已知，就可以触发类型推断。</p>
<p> <strong>1. 2 类型标注</strong><br> 当你声明常量或者变量的时候可以加上类型标注(type annotation)，说明常量或者变量中要存储的值的类型。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var testString: String = &quot;test string&quot;</div><div class="line">//在一行中定义多个同样类型的变量，用逗号分割，并在最后一个变量名之后添加类型标注</div><div class="line">var red, green, blue: Double</div></pre></td></tr></table></figure></p>
<p> <strong>1.3 数值型类型转换</strong><br> 整数和浮点数的转换必须显式指定类型:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//整数和浮点数互转</div><div class="line">let a = 10</div><div class="line">let b = 15.9</div><div class="line">let c = Double(a) + b  //c等于25.9</div><div class="line">let d = Int(b)  //d等于15 会把小数点位给截取掉</div><div class="line"></div><div class="line">//字符串和Int互转</div><div class="line">var strTest = &quot;112&quot;</div><div class="line">let temp = Int(strTest) //temp是Int类型的112</div><div class="line"></div><div class="line">var strTest1 = &quot;我是字符串&quot;</div><div class="line">let temp1 = Int(strTest1) //temp1类型为可选(optionals)的Int类型，值为nil</div><div class="line">//什么是可选类型？接下来会将!</div></pre></td></tr></table></figure></p>
<p><strong>1.4 类型别名</strong><br>类型别名(type aliases)就是给现有类型定义另一个名字<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">typealias MYInt = Int</div><div class="line">var x: MYInt = 5</div></pre></td></tr></table></figure></p>
<p><strong>1.5 元组</strong><br>元组(tuples)把多个值组合成一个复合值。元组内的值可以是任意类型，并不要求是相同类型。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">let ageAndName = (24, &quot;Jack&quot;)</div><div class="line">// ageAndName 的类型是 (Int, String)</div></pre></td></tr></table></figure></p>
<p>你可以将一个元组的内容分解(decompose)成单独的常量和变量，然后你就可以正常使用它们了:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">let (age, name) = ageAndName</div><div class="line">print(&quot;the age is \(age)&quot;) //24</div><div class="line">print(&quot;the name is \(name)&quot;) //Jack</div><div class="line"></div><div class="line">//如果只需要其中一部分元组值，可以把要忽略的部分用(_)标记</div><div class="line">let (justAge, _) = ageAndName</div></pre></td></tr></table></figure></p>
<p>除了上面的方式，我们还可以使用下标或者定义元组的时候给值添加命名:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//使用下标</div><div class="line">print(&quot;the age is \(ageAndName.0)&quot;)</div><div class="line">print(&quot;the age is \(ageAndName.1)&quot;)</div><div class="line"></div><div class="line">//定义元组的时候给元素添加命名</div><div class="line">let nameAndSex = (nameW:&quot;Jan&quot;,sex:&quot;woman&quot;)</div><div class="line">print(&quot;the name is \(nameAndSex.nameW) sex is :\(nameAndSex.sex)&quot;)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通常说，编程语言教程中的第一个程序应该在屏幕上打印&lt;code&gt;“Hello, world”。&lt;/code&gt;在Swift中，可以勇一行代码实现：&lt;br&gt;&lt;code&gt;print(&amp;quot;Hello, world!&amp;quot;)&lt;/code&gt;&lt;br&gt;&lt;strong&gt;1.  常
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lq9869.github.io/2017/05/23/hello-world/"/>
    <id>https://lq9869.github.io/2017/05/23/hello-world/</id>
    <published>2017-05-23T10:50:14.000Z</published>
    <updated>2017-05-23T10:50:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
